#cloud-config
write_files:
- path: /root/node.sh
  owner: root
  content: |
    #!/usr/bin/env bash
    catch() {
       vmtoolsd --cmd "info-set guestinfo.post_customization_script_execution_status $?"
       error_message="$(date) $(caller): $BASH_COMMAND"
       echo "$error_message" &>> /var/log/capvcd/customization/error.log
       vmtoolsd --cmd "info-set guestinfo.post_customization_script_execution_failure_reason $error_message"
    }
    mkdir -p /var/log/capvcd/customization
    trap 'catch $? $LINENO' ERR
    set -ex

    vmtoolsd --cmd "info-set guestinfo.postcustomization.networkconfiguration.status in_progress"
      echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.conf
      echo 'net.ipv6.conf.default.disable_ipv6 = 1' >> /etc/sysctl.conf
      echo 'net.ipv6.conf.lo.disable_ipv6 = 1' >> /etc/sysctl.conf
      sudo sysctl -p
      # also remove ipv6 localhost entry from /etc/hosts
      sed -i 's/::1/127.0.0.1/g' /etc/hosts || true
    vmtoolsd --cmd "info-set guestinfo.postcustomization.networkconfiguration.status successful"

    vmtoolsd --cmd "info-set guestinfo.postcustomization.kubeadm.node.join.status in_progress"
      # tag images
      for image in "coredns" "etcd" "kube-proxy" "kube-apiserver" "kube-controller-manager" "kube-scheduler"
      do
        image_ref=$(ctr -n=k8s.io image list | cut -d" " -f1 | grep $image)
        ref_path=$(echo $image_ref | sed 's/:.*//')
        new_tag_version=$(echo $image_ref | sed 's/.*://' | sed 's/_/-/')
        ctr -n=k8s.io image tag $image_ref $ref_path:$new_tag_version
      done
      __JINJA_RUNCMD_REPLACE_ME__
    vmtoolsd --cmd "info-set guestinfo.postcustomization.kubeadm.node.join.status successful"

    echo "$(date) post customization script execution completed" &>> /var/log/capvcd/customization/status.log
    exit 0
runcmd:
- bash /root/node.sh
timezone: UTC
disable_root: false
preserve_hostname: false
hostname: "%s"
final_message: "The system is ready after $UPTIME seconds"
